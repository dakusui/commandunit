"${__BUD__LOGGING_RC:-false}" && return 0
readonly __BUD__LOGGING_RC=true

source "${BUD_LIB:="$(dirname "${BASH_SOURCE[0]}")"}/core.rc"

function trace() {
  if [[ "${BUD_TRACE:-disabled}" == "enabled" ]]; then
    local _caller
    _caller="$(caller 0)"
    _caller="$(format_log_record ${_caller})"
    message "TRACE: ${_caller}:" "${@}"
    if [[ "${BUD_LOG_FILE}" != "" ]]; then
      message "TRACE: ${_caller}: " "${@}" 2>>"${BUD_LOG_FILE}"
    fi
  fi
}

function debug() {
  if [[ "${BUD_DEBUG:-disabled}" == "enabled" ]]; then
    local _caller
    _caller="$(caller 0)"
    _caller="$(format_log_record ${_caller})"
    message "DEBUG: ${_caller}: $(__bud__info_indent)" "${@}"
    if [[ "${BUD_LOG_FILE}" != "" ]]; then
      message "DEBUG: ${_caller}: $(__bud__info_indent)" "${@}" 2>>"${BUD_LOG_FILE}"
    fi
  fi
}

__BUD__INFO_INDENT=0
function info_begin() {
  local __bud__stack_offset=1
  info "BEGIN:" "${@}"
  __BUD__INFO_INDENT=$((__BUD__INFO_INDENT + 1))
}

function info() {
  if [[ "${BUD_INFO:-enabled}" == "enabled" ]]; then
    local _caller
    _caller="$(caller "${__bud__stack_offset:-0}")"
    # shellcheck disable=SC2086
    _caller="$(format_log_record ${_caller})"
    message "INFO:  ${_caller}: $(__bud__info_indent)" "${@}"
    if [[ "${BUD_LOG_FILE}" != "" ]]; then
      message "INFO:  ${_caller}: $(__bud__info_indent)" "${@}" 2>>"${BUD_LOG_FILE}"
    fi
  fi
}

function info_end() {
  local __bud__stack_offset=1
  __BUD__INFO_INDENT=$((__BUD__INFO_INDENT - 1))
  info "END:" "${@}"
}

function __bud__info_indent() {
  printf "%$(("${__BUD__INFO_INDENT}" * 2))s" ""
}

function error() {
  if [[ "${BUD_ERROR:-enabled}" == "enabled" ]]; then
    local _caller
    _caller="$(caller 0)"
    # shellcheck disable=SC2086
    _caller="$(format_log_record ${_caller})"
    message "ERROR: ${_caller}: " "${@}"
    if [[ "${BUD_LOG_FILE}" != "" ]]; then
      message "ERROR: ${_caller}: " "${@}" 2>>"${BUD_LOG_FILE}"
    fi
  fi
}

function format_log_record() {
  local _line="${1:-???}" _function="${2:-unknown}" _file="${3:-unknown file}"
  _file="${_file/${OUTDIR:-""}/${SRCDIR:-""}}"
  _file="${_file#${PWD}/}"
  printf "%-50s (%-30s)" "${_file}:${_line}" "${_function}"
}
