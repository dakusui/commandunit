"${__COMMANDUNIT__MAIN_RC:-false}" && return 0
readonly __COMMANDUNIT__MAIN_RC=true
set -eu -o pipefail -o errtrace
shopt -s inherit_errexit nullglob compat"${BASH_COMPAT=42}"

function define_plugin_functions() {
  function format_log_record() {
    local _line="${1:-???}" _function="${2:-unknown}" _file="${3:-unknown file}"
    _file="${_file/${OUTDIR:-""}/${SRCDIR:-""}}"
    _file="${_file#${PWD}/}"
    printf "%8s: %-80s" "${BASHPID}" "${_file}:${_line} (${_function})"
  }

  function included_tests() {
    echo '(test-.+|.*-test|test)'
  }
}

COMMANDUNIT_HOME="${COMMANDUNIT_HOME:-$(dirname "$(dirname "${BASH_SOURCE[0]}")")}"
BUD_APPCLASS_NAME="commandunit"

COMMANDUNIT_DEPENDENCIES_ROOT="$(dirname "$(dirname "${BASH_SOURCE[0]}")")/dependencies"
COMMANDUNIT_HOSTFSROOT_MOUNTPOINT="$(cat "$(dirname "${BASH_SOURCE[0]}")/hostfsroot_mountpoint")"
COMMANDUNIT_LOGLEVEL="${COMMANDUNIT_LOGLEVEL:-ERROR}"
if [[ "${COMMANDUNIT_LOGLEVEL}" == DEBUG ]]; then
  BUD_ERROR=enabled
  BUD_INFO=enabled
  BUD_DEBUG=enabled
elif [[ "${COMMANDUNIT_LOGLEVEL}" == INFO ]]; then
  BUD_ERROR=enabled
  BUD_INFO=enabled
  BUD_DEBUG=disabled
elif [[ "${COMMANDUNIT_LOGLEVEL}" == ERROR ]]; then
  BUD_ERROR=enabled
  BUD_INFO=disabled
  BUD_DEBUG=disabled
else
  echo "Unknown log level COMMANDUNIT_LOGLEVEL: '${COMMANDUNIT_LOGLEVEL}' was specified."
  exit 1
fi

export COMMANDUNIT_HOSTFSROOT_MOUNTPOINT
export COMMANDUNIT_DEPENDENCIES_ROOT
export COMMANDUNIT_BUILTIN_ROOT="${COMMANDUNIT_DEPENDENCIES_ROOT}"
export COMMANDUNIT_HOME
export COMMANDUNIT_PROJECT_DIR="${COMMANDUNIT_INDOCKER:+${COMMANDUNIT_HOSTFSROOT_MOUNTPOINT}}${COMMANDUNIT_PWD}"
export BUD_APPCLASS_NAME
export BUD_INFO
export BUD_DEBUG
export BUD_ERROR
source "${COMMANDUNIT_DEPENDENCIES_ROOT}/bud/lib/bud.rc"

define_plugin_functions
