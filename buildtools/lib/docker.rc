"${__BUILDTOOLS__DOCKER_RC:-false}" && return 0
readonly __BUILDTOOLS__DOCKER_RC=true

function build_docker_image() {
  local _version="${1}"
  local _image_name="${DOCKER_REPO_NAME}:${_version}"
  message "Building docker image: '${_image_name}'"
  docker build --build-arg VERSION="${_version}" -t "${_image_name}" .
}

function run_command_unit_with_source() {
  __run_command_unit_with_source "${@}"
}

function run_command_unit_with_snapshot_docker_image() {
  __run_command_unit_with_docker "snapshot" "${@}"
}

function run_command_unit_with_released_docker_image() {
  __run_command_unit_with_docker "" "${@}"
}

function run_command_unit_with_snapshot_docker_image_from_entrypoint() {
  local _entrypoint="${1}"
  shift
  __run_command_unit_with_docker_from_entrypoint "${_entrypoint}" "snapshot" "${@}"
}

function run_command_unit_with_released_docker_image_from_entrypoint() {
  local _entrypoint="${1}"
  shift
  __run_command_unit_with_docker_from_entrypoint "${_entrypoint}" "" "${@}"
}

function __run_command_unit_with_source() {
  local _executable="${EXEC_BASEDIR}/bin/commandunit"
  message "Running commandunit(source): '${_executable}'"
  export COMMANDUNIT_PWD="${PROJECT_BASEDIR}"
  "${_executable}" --test-workdir="out/docker-commandunit/work" --test-reportdir="out/docker-commandunit/report" "${@}"
}

function __run_command_unit_with_docker() {
  local _suffix="${1}"
  shift
  message "Running commandunit(docker): repo:'${DOCKER_REPO_NAME}' version:'${TARGET_VERSION}' suffix: '${_suffix}'"
  __docker__run_command_unit \
    "${PROJECT_BASEDIR}" \
    "${BUILD_HOSTFSROOT_MOUNTPOINT}" \
    "${DOCKER_REPO_NAME}" \
    "${TARGET_VERSION}" \
    "${_suffix}" \
    "" \
    "${COMMANDUNIT_LOGLEVEL:-ERROR}" \
    "${@}"
}

function __run_command_unit_with_docker_from_entrypoint() {
  local _entrypoint="${1}" _suffix="${2}"
  shift 2
  __docker__run_command_unit \
    "${PROJECT_BASEDIR}" \
    "${BUILD_HOSTFSROOT_MOUNTPOINT}" \
    "${DOCKER_REPO_NAME}" \
    "${TARGET_VERSION}" \
    "${_suffix}" \
    "${_entrypoint}" \
    "${COMMANDUNIT_LOGLEVEL:-ERROR}" \
    "${@}"
}

function __docker__run_command_unit() {
  local _project_basedir="${1}"
  local _hostfsroot_mountpoint="${2}"
  local _docker_repo_name="${3}"
  local _image_version="${4:-latest}"
  local _suffix="${5:+-${5}}"
  local _entrypoint="${6:+--entrypoint="${6}"}"
  local _loglevel="${7:-ERROR}"
  shift 7
  local _me
  local _image_name="${_docker_repo_name}:${_image_version}${_suffix}"
  _me="${USER}"
  # shellcheck disable=SC2086
  docker run \
    --user="$(id -u "${_me}"):$(id -g "${_me}")" \
    --env COMMANDUNIT_PWD="${_project_basedir}" \
    --env COMMANDUNIT_LOGLEVEL="${_loglevel}" \
    -v "$(pwd):${_hostfsroot_mountpoint}$(pwd)" \
    ${_entrypoint} \
    -i "${_image_name}" \
    "${@}"
}
