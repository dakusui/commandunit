source "$(dirname "$(dirname "${BASH_SOURCE[0]}")")/lib/docutils.rc"

# This stage requires to have a branch for documentation in your repository.
function execute_stage() {
  local _repo_url
  local _docbranch
  if [[ -e "${DOCDIR}" ]]; then
    abort "To publish your doc, do 'clean' and 'prepare' first."
  fi
  _repo_url="$(jq -crM '.repo.url' "build_info.json")"
  _docbranch="$(jq -crM '.repo.documentation.docbranch' ./build_info.json)"
  git clone "${_repo_url}" --branch="${_docbranch}" --depth=1 "${DOCDIR}"|| abort "Failed to clone from '${_repo_url}'. Maybe you don't have '${_docbranch}' branch"
  # In ordre not to do 'rm -fr .' , 'rm -fr /', or 'rm -fr "${PROJECT_DIR}' on unintended behavior (bugs)
  # Intentionally not using "$DOCDIR" here.
  rm -fr "${PROJECT_DIR}/out/doc/"*

  ./build.sh doc

  git -C "${DOCDIR}" add --all .
  git -C "${DOCDIR}" commit -a -m "Documentation updated."
  git -C "${DOCDIR}" push origin "${_docbranch}":"${_docbranch}"
}

#git init
#$ git remote add origin https://github/project.git
#$ touch document.doc
#$ git add .
#$ git commit -m '1st orphan-doc commit'
#$ git push origin master:orphan-doc  # ←これでリモートにはブランチ名が orphan-doc でプッシュできるのでエラーがおきない
